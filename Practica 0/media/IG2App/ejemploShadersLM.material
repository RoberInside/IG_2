
vertex_program vertexShadersLM glsl {
	source vertexShaderLMglsl.txt 		//archivo del código
	default_params 						//valores para las variables uniform
	{
		param_named_auto modelViewProjMat worldviewproj_matrix
		param_named_auto Tiempo sintime_0_1 50 	//Tiempo para el vertex shader 
	}
}

fragment_program fragmentShadersLM glsl {
	source fragmentShaderLMglsl.txt 	//archivo del código
	default_params						//valores para las variables uniform
	{
		param_named textura1 int 1 		//unidad de textura (estaba mal, ponia 0 y uno y usabas 1 y 2)
		param_named textura2 int 2
		//param_named FB float 0.5
		param_named_auto FB time_0_1 10	//Si queremos usar los parametros time
		param_named intLuz float 1.0
		
	}
}

material ejemploShadersLM {
	technique {
		pass{
			vertex_program_ref vertexShadersLM glsl{
			}
			fragment_program_ref fragmentShadersLM glsl{
			}

			texture_unit texture1 {
				//texture 1d_debug.png				//textura original
				texture spacesky.jpg				//nueva textura solicitada al final de P00 (practica 2)
				tex_address_mode clamp
				filtering bilinear
			}
			
			texture_unit texture2 {
				texture flare.png
				tex_address_mode wrap
			}
		
		}
	}
}